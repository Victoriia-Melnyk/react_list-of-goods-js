{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALY","SORT_BY_LENGTH","App","useState","sortField","setSortField","reverseState","setReverseState","visibleGoods","list","preparedList","reverse","sort","good1","good2","localeCompare","length","getPreparedList","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAqB,gBACrBC,EAAiB,SAiChB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EAlCR,SAAyBC,EAAML,EAAWE,GACxC,IAAII,EAAY,YAAOD,GAEvB,MAAkB,KAAdL,IAAqC,IAAjBE,EACfG,EAGS,KAAdL,IAAqC,IAAjBE,EACfI,EAAaC,WAGlBP,IACFM,EAAeA,EAAaE,MAAK,SAACC,EAAOC,GACvC,OAAQV,GACN,QACE,OAAO,EACT,KAAKJ,EACH,OAAOa,EAAME,cAAcD,GAC7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,YAKhCV,IACFI,EAAeA,EAAaC,WAGvBD,GAOLO,CAAgBlB,EAAiBK,EAAWE,GAE9C,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYhB,IAAcJ,IAE5BqB,QAAS,WACPhB,EAAaL,IANjB,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYhB,IAAcH,IAE5BoB,QAAS,WACPhB,EAAaJ,IANjB,4BAYA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAA6B,IAAjBd,IAEde,QAAS,WACPd,GAAiBD,IANrB,sBAYgB,KAAdF,IAAqC,IAAjBE,IACpB,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAa,IACbE,GAAgB,IALpB,sBAaJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAoBA,aC9G9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.442d1f5e.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALY = 'alphabeticaly';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedList(list, sortField, reverseState) {\n  let preparedList = [...list];\n\n  if (sortField === '' && reverseState === false) {\n    return list;\n  }\n\n  if (sortField === '' && reverseState === true) {\n    return preparedList.reverse();\n  }\n\n  if (sortField) {\n    preparedList = preparedList.sort((good1, good2) => {\n      switch (sortField) {\n        default:\n          return 0;\n        case SORT_ALPHABETICALY:\n          return good1.localeCompare(good2);\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n      }\n    });\n  }\n\n  if (reverseState) {\n    preparedList = preparedList.reverse();\n  }\n\n  return preparedList;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseState, setReverseState] = useState(false);\n  const visibleGoods\n  = getPreparedList(goodsFromServer, sortField, reverseState);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_ALPHABETICALY,\n          })}\n          onClick={() => {\n            setSortField(SORT_ALPHABETICALY);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_BY_LENGTH,\n          })}\n          onClick={() => {\n            setSortField(SORT_BY_LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': reverseState === false,\n          })}\n          onClick={() => {\n            setReverseState(!reverseState);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== '' || reverseState === true) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setReverseState(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}